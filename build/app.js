!function(e){function t(t){for(var s,n,a=t[0],c=t[1],h=t[2],l=0,d=[];l<a.length;l++)n=a[l],Object.prototype.hasOwnProperty.call(r,n)&&r[n]&&d.push(r[n][0]),r[n]=0;for(s in c)Object.prototype.hasOwnProperty.call(c,s)&&(e[s]=c[s]);for(p&&p(t);d.length;)d.shift()();return o.push.apply(o,h||[]),i()}function i(){for(var e,t=0;t<o.length;t++){for(var i=o[t],s=!0,a=1;a<i.length;a++){var c=i[a];0!==r[c]&&(s=!1)}s&&(o.splice(t--,1),e=n(n.s=i[0]))}return e}var s={},r={0:0},o=[];function n(t){if(s[t])return s[t].exports;var i=s[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=s,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="";var a=window.webpackJsonp=window.webpackJsonp||[],c=a.push.bind(a);a.push=t,a=a.slice();for(var h=0;h<a.length;h++)t(a[h]);var p=c;o.push([1,1]),i()}([,function(e,t,i){"use strict";i.r(t);var s=i(0),r=i.n(s);class o extends r.a.Scene{constructor(e){super("PlayScene"),this.config=e,this.bird=null,this.pipes=null,this.pipeVerticalDistanceRange=[100,250],this.pipeHorizontalDistanceRange=[450,550],this.pipeHorizontalDistance=0,this.flapVelocity=300,this.score=0,this.scoreText=""}preload(){this.load.image("sky","assets/sky.png"),this.load.image("bird","assets/bird.png"),this.load.image("pipe","assets/pipe.png")}create(){this.createBG(),this.handleInputs(),this.createPipes(),this.createBird(),this.createColliders(),this.createScore()}update(){this.checkGameStatus(),this.recyclePipes()}createBG(){this.add.image(0,0,"sky").setOrigin(0,0)}createBird(){this.bird=this.physics.add.sprite(this.config.startPosition.x,this.config.startPosition.y,"bird").setOrigin(0),this.bird.body.gravity.y=600,this.bird.setCollideWorldBounds(!0)}createColliders(){this.physics.add.collider(this.bird,this.pipes,this.gameOver,null,this)}createScore(){this.score=0;const e=localStorage.getItem("bestScore");this.scoreText=this.add.text(16,16,"Score: 0",{fontSize:"32px",color:"#000"}),this.bestScoreText=this.add.text(16,48,"Top score: "+(e||0),{fontSize:"18px",color:"#000"})}createPipes(){this.pipes=this.physics.add.group();for(let e=0;e<4;e++){const e=this.pipes.create(0,0,"pipe").setImmovable(!0).setOrigin(0,1),t=this.pipes.create(0,0,"pipe").setImmovable().setOrigin(0);this.placePipe(e,t)}this.pipes.setVelocityX(-200)}handleInputs(){this.input.on("pointerdown",this.flap,this),this.input.keyboard.on("keydown_SPACE",this.flap,this)}checkGameStatus(){(this.bird.getBounds().bottom>=this.config.height||this.bird.y<=0)&&(this.gameOver(),this.bird.body.velocity.y=0)}placePipe(e,t){const i=this.getRightMostPipe();let s=r.a.Math.Between(...this.pipeVerticalDistanceRange),o=r.a.Math.Between(20,this.config.height-20-s),n=r.a.Math.Between(...this.pipeHorizontalDistanceRange);e.x=i+n,e.y=o,t.x=e.x,t.y=e.y+s}recyclePipes(){const e=[];this.pipes.getChildren().forEach((t=>{t.getBounds().right<=0&&(e.push(t),2===e.length&&(this.placePipe(...e),this.increaseScore(),this.setBestScore()))}))}getRightMostPipe(){let e=0;return this.pipes.getChildren().forEach((function(t){e=Math.max(t.x,e)})),e}setBestScore(){const e=localStorage.getItem("bestScore"),t=e&&parseInt(e,10);(t||this.score>t)&&localStorage.setItem("bestScore",this.score)}gameOver(){this.physics.pause(),this.bird.setTint(15616066),this.setBestScore(),this.time.addEvent({delay:1e3,callback:()=>{this.scene.restart()},loop:!1})}flap(){this.bird.body.velocity.y=-this.flapVelocity}increaseScore(){this.score++,this.scoreText.setText("Score: "+this.score)}}var n=o;const a={width:800,height:600,startPosition:{x:80,y:300}},c={type:r.a.AUTO,...a,physics:{default:"arcade",arcade:{}},scene:[new n(a)]};new r.a.Game(c)}]);